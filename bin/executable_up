#!/bin/bash

# up - A script to manage and run other 'up-*' scripts.
# Mike Barker <mike@thebarkers.com>
# May 22nd, 2025

# Error Handling
# Exit immediately if a command exits with a non-zero status.
# Treat unset variables as an error.
# The exit status of a pipeline is the exit status of the last command
# to exit with a non-zero status, or zero if all commands exit successfully.
set -euo pipefail

VERSION="1.0.0"
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Display help message
show_help() {
    echo "Usage: up [COMMAND] [-h|--help] [-V|--version]"
    echo ""
    echo "Runs specific 'up-*' scripts or all of them."
    echo ""
    echo "Commands:"
    echo "  <command>    Runs the 'up-<command>' script in the same directory."
    echo "  all          Runs all 'up-*' scripts found in the same directory."
    echo ""
    echo "Options:"
    echo "  -h, --help   Display this help message and exit."
    echo "  -V, --version  Display version information and exit."
    echo ""
    echo "Examples:"
    echo "  up brew      # Runs the 'up-brew' script"
    echo "  up all       # Runs all 'up-*' scripts"
}

# Run a specific up script
run_script() {
    local script_name="up-$1"
    local script_path="$SCRIPT_DIR/$script_name"

    if [ -x "$script_path" ]; then
        echo "--> Running $script_name..."
        "$script_path"
    else
        echo "Error: Script '$script_name' not found or not executable in $SCRIPT_DIR"
        exit 1
    fi
}

# Run all up scripts
run_all_scripts() {
    # Find all executable files starting with 'up-'
    if [[ $(uname -s) == "Darwin" ]]; then 
        local perm_arg=+111
    else
        local perm_arg=/111
    fi
    local scripts=($(find "$SCRIPT_DIR" -type f -perm $perm_arg -iname 'up-*'))

    # Check if the find returned any results
    if [ "${#scripts[@]}" -eq 1 ] && [ ! -e "${scripts[0]}" ]; then
        echo "No 'up-' scripts found in $SCRIPT_DIR."
        return 0
    fi

    # Run all executable up-* scripts
    for script_path in "${scripts[@]}"; do
        local script_base_name=$(basename "$script_path")
        local command_name="${script_base_name#up-}"
        run_script "$command_name"
    done
}

# Display help if no arguments given
if [ "$#" -eq 0 ]; then
    show_help
    exit 0
fi

# Parse arguments
case "$1" in
    -h|--help)
        show_help
        exit 0
        ;;
    -V|--version)
        echo "up version $VERSION"
        exit 0
        ;;
    all)
        run_all_scripts
        exit 0
        ;;
    *)
        run_script "$1"
        exit 0
        ;;
esac
